AWSTemplateFormatVersion: 2010-09-09
Description: Deploys Every Security Group of Iran Bet
Parameters:
  ParentVPCStackName:
    Description: Name of ParentVPCStack.
    Type: String
    AllowedValues: [ "staging-vpc", "production-vpc" ]
    Default: staging-vpc
  ProjectName:
    Description: Name of Company. To append in name of Resources.
    Type: String
    Default: ''
  EnvironmentParameter:
    Description: Current Environment To append in name of Resources.
    Type: String
    Default: ''
    
Resources:
  WebALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Web ALB
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-Web-Service-ALB"
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: 80
          FromPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          ToPort: 443
          FromPort: 443
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
  AdminALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Admin ALB
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-Admin-Service-ALB"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
  WebServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: WebALBSecurityGroup
    Properties:
      GroupDescription: Security Group for Web Service
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-Web-Service"
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: 3000
          FromPort: 3000
          SourceSecurityGroupId: !GetAtt WebALBSecurityGroup.GroupId
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
  AdminServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: AdminALBSecurityGroup
    Properties:
      GroupDescription: Security Group for Admin Service
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-Admin-Service"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          SourceSecurityGroupId: !GetAtt AdminALBSecurityGroup.GroupId
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
  SidekiqServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Sidekiq Service
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-Sidekiq-Service"
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
  OpenVPNSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Admin Service
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-OpenVPN"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1194
          ToPort: 1194
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 945
          ToPort: 945
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 943
          ToPort: 943
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for RDS
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-RDS"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !GetAtt WebServiceSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !GetAtt AdminServiceSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !GetAtt SidekiqServiceSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !GetAtt OpenVPNSecurityGroup.GroupId
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
  MemcachedSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for MemCached
      GroupName: !Sub "${ProjectName}-${EnvironmentParameter}-SG-MemCached"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp:
            Fn::ImportValue: !Sub '${ParentVPCStackName}-privatesubnet1-cidr-block'
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp:
            Fn::ImportValue: !Sub '${ParentVPCStackName}-privatesubnet2-cidr-block'
        - IpProtocol: tcp
          FromPort: 11211
          ToPort: 11211
          CidrIp:
            Fn::ImportValue: !Sub '${ParentVPCStackName}-privatesubnet1-cidr-block'
        - IpProtocol: tcp
          FromPort: 11211
          ToPort: 11211
          CidrIp:
            Fn::ImportValue: !Sub '${ParentVPCStackName}-privatesubnet2-cidr-block'
      VpcId:
        Fn::ImportValue: !Sub '${ParentVPCStackName}-vpc'
